//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.209
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.209.
// 
namespace Anderson.Chris.BlogX.Services 
{
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    using Anderson.Chris.BlogX.Runtime;
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BlogXEditingSoap", Namespace="http://www.simplegeek.com")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntryBase))]
    public class BlogXEditing : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public BlogXEditing() {
            this.Url = "http://localhost/weblogx/blogxediting.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.simplegeek.com/CanEdit", RequestNamespace="http://www.simplegeek.com", ResponseNamespace="http://www.simplegeek.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanEdit(string username, string password) {
            object[] results = this.Invoke("CanEdit", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCanEdit(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CanEdit", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCanEdit(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.simplegeek.com/DeleteEntry", RequestNamespace="http://www.simplegeek.com", ResponseNamespace="http://www.simplegeek.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEntry(string entryId, string username, string password) {
            this.Invoke("DeleteEntry", new object[] {
                        entryId,
                        username,
                        password});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteEntry(string entryId, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteEntry", new object[] {
                        entryId,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteEntry(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.simplegeek.com/UpdateEntry", RequestNamespace="http://www.simplegeek.com", ResponseNamespace="http://www.simplegeek.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateEntry(Entry entry, string username, string password) {
            object[] results = this.Invoke("UpdateEntry", new object[] {
                        entry,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateEntry(Entry entry, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateEntry", new object[] {
                        entry,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateEntry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.simplegeek.com/CreateEntry", RequestNamespace="http://www.simplegeek.com", ResponseNamespace="http://www.simplegeek.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateEntry(Entry entry, string username, string password) {
            object[] results = this.Invoke("CreateEntry", new object[] {
                        entry,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateEntry(Entry entry, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateEntry", new object[] {
                        entry,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCreateEntry(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
